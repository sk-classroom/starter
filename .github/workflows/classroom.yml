name: Autograding Tests
'on':
- push
- repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check previous run status
      id: check_previous
      run: |
        PREVIOUS_RUN=$(gh run list --workflow="Autograding Tests" --status=success --limit=1 --json headSha | jq -r '.[0].headSha // empty')
        CURRENT_SHA=${{ github.sha }}
        if [ "$PREVIOUS_RUN" = "$CURRENT_SHA" ]; then
          echo "skip=true" >> $GITHUB_OUTPUT
          echo "Tests already passed for this commit"
        else
          echo "skip=false" >> $GITHUB_OUTPUT
        fi
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Task 1
      id: task-1
      if: steps.check_previous.outputs.skip != 'true'
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Assignment - Test 1
        setup-command: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="$HOME/.cargo/bin:$PATH"
          uv venv
          source .venv/bin/activate
          . $HOME/.cargo/env
          uv pip install -r requirements.txt
        command: uv run tests/test_01.py
        timeout: 10
        max-score: 5

    - name: Test 2
      id: test-2
      if: steps.check_previous.outputs.skip != 'true'
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Quiz Challenge
        setup-command: ''
        command: |
          uv run python -m grading.llm_quiz \
            --config ./grading/config.toml \
            --quiz-file ./assignment/quiz.toml \
            --api-key ${{ secrets.CHAT_API }}
        timeout: 10
        max-score: 5

    - name: Autograding Reporter
      if: steps.check_previous.outputs.skip != 'true'
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        TASK-1_RESULTS: "${{steps.task-1.outputs.result}}"
        TEST-2_RESULTS: "${{steps.test-2.outputs.result}}"
      with:
        runners: task-1,test-2